-*- Mode: rst -*-

TODO
----

* txn classifier in cython.
* hardening.
* sanity check hashes of known blocks
* script for downloading bootstrap.dat & matching utxo.bin.
* match compiler
* investigate using our own copy of ripemd160 (using the one in 'hashlib' is a back-door openssl dep.)
* disk i/o thread for access to blocks.bin.

pruned node
===========

I'm thinking of supporting a fully pruned node that starts with a utxo
snapshot, and accumulates blocks from that point forward.  The blocks
can be thought of as 'diffs' against the utxo database.  It should
then be possible to synchronize between (trusted) nodes by merely
copying the utxo database over the network (probably with TLS).

* build utxo directly from chain puller.
* 'recent blocks' database (maybe just mod the RecentBlocks class).
* asn.1 spec & comms for new protocol.
* demonstrate sync via utxo.
* mempool.


ledger
======

caesure uses a persistent data structure (a functional AA tree) to
implement a 'many worlds' approach to the UTXO database.  Within an
area at the front of the chain, each block/fork has its own version of
the ledger, each with a separate history.  Each fork updates
independently.  When a dead fork has fallen far enough behind, its
ledger data is abandoned.

A faster, stl-based data structure is used for the initial scan.  The
plan is to distribute paired 'blocks.dat' and 'utxo.bin' files via
bittorrent.

memory requirements: July 2015, ~4GB.


in progress
-----------
* ledger: final task remains - connecting the many-worlds ledger to txn flow.
* test suites.
