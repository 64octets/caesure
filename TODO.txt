-*- Mode: rst -*-

TODO
----

* getdata/blocks: before txns, let's forward blocks.
* ledger: [optional, for full forwarding node] live pruning ledger in memory.
* hardening.
* bootstrap.dat (choose one of the three options)
* use html_help module.
* proper package installation and directory for blocks.bin etc...
* investigate using our own copy of ripemd160 (using the one in 'hashlib' is a back-door openssl dep.)
* sanity check hashes of known blocks

ledger
======

Our plan is to use a persistent data structure (a functional AA tree) to implement a 'multiple universes' approach to the
blockchain: within an area at the front of the chain, each block/fork will have its own version of the ledger, each with a separate
history.  Each fork will update independently.  When a dead fork has fallen far enough behind, its ledger data is abandoned.

The persistent data structure is rather expensive compared to an stl map, so the latter is used only for an initial scan.  We'll
probably distribute utxo cache files (currently ~600MB) via bittorrent or other means.

memory requirements: characterize.

match
=====
A match compiler will let us auto-generate code (probably in cython) to match against the various
transaction types at high speed.  Also, it would be generally useful.



